import time


def fast_mult( num1 , num2):
	# using Karatsuba multiplication algorithm

	def size_base10(n):
		size = 0
		while n /10 != 0:
			size += 1
			n = n/10
		
		return size
	
	
	

	m = max(size_base10(num1) , size_base10(num2))

	if m < 10:
		return num1 * num2

	m2 = m/2 + m%2

	m2_pow = pow(10, m2)

	high1 , low1 = num1 / m2_pow, num1 %m2_pow 
	high2 , low2 = num2 / m2_pow, num2 %m2_pow 


	z0 = fast_mult(low1, low2)

	z1 = fast_mult((low1+high1) , (low2 + high2))

	z2 = fast_mult(high1 , high2)


	return z2*m2_pow**2+(z1-z2-z0)*m2_pow+z0

	

start = time.time()
for i in range(1):
	fast_mult(412890347129064512051265129052346236346237286398365262543523583457305745361462461246248621452784512784678312512512351261235124312412412341251264635351512561641234125126146247345235415151241412352346346457251235124312412623463457345685679567346234341526235462457836828562452345235235164809126489178912374512356128974581296340612934612412857412875917590121541254715412894561875412785412378461784512847518476127845124512874512389451284512548126416491238412789461246127841278137813784512394573124123941278451278541276845123561278649823541978547185417892451245781237841890561290456123906412643052478031254128056123684543241235814512435216453214515432142134124512354127564128547812345127645126784531276451274512367546712543125312491782378912657812634891275412789512375412789561238946128947612305236612304612394612340912748912364312471235478125347812541256123890649012634091264310510236512890567134895016429036412289645015601236751275475415612371246238745612783452784623894612894512347896123478612345123478254781264123561290856128956123704612034612890476128904712463124612 , 24363252345234572390578234572348957356192645891256389120745643124571284528462156012643781547832456234526745236125612542463124120512780453127894512384795124512344128903471290645120512651290561290856128956123704612034612890476128904712463124612)
end = time.time()
print end - start


start = time.time()
for j in range(1):
	temp = 412890347129064512051265129052346236346237286398365262543523583457305745361462461246248621452784512784678312512512351261235124312412412341251264635351512561641234125126146247345235415151241412352346346457251235124312412623463457345685679567346234341526235462457836828562452345235235164809126489178912374512356128974581296340612934612412857412875917590121541254715412894561875412785412378461784512847518476127845124512874512389451284512548126416491238412789461246127841278137813784512394573124123941278451278541276845123561278649823541978547185417892451245781237841890561290456123906412643052478031254128056123684543241235814512435216453214515432142134124512354127564128547812345127645126784531276451274512367546712543125312491782378912657812634891275412789512375412789561238946128947612305236612304612394612340912748912364312471235478125347812541256123890649012634091264310510236512890567134895016429036412289645015601236751275475415612371246238745612783452784623894612894512347896123478612345123478254781264123561290856128956123704612034612890476128904712463124612 * 24363252345234572390578234572348957356192645891256389120745643124571284528462156012643781547832456234526745236125612542463124120512780453127894512384795124512344128903471290645120512651290561290856128956123704612034612890476128904712463124612
end = time.time()

print end - start
 



